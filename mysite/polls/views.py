from django.shortcuts import render, get_object_or_404

from django.http import HttpResponseRedirect, HttpResponse
from .models import Choice,Question
from django.urls import reverse
from django.http import Http404
from django.views import generic
from django.db.models import F, Sum
from django.db.models import Count

class IndexView(generic.ListView):
    template_name = 'polls/index.html'
    context_object_name = 'latest_question_list'    # Autogenerated would be 'question_list'

    def get_queryset(self):
        """Return the last five published questions"""
        #return Question.objects.order_by('-pub_date')[:5]
        return Question.objects.order_by('-last_voted')[:5]

def summary(request):
#    latest_question_list = Question.objects.order_by('-last_voted')[:5]
    num_questions = 20
    latest_question_list    = Question.objects.annotate(votes=Sum('choice__votes')).filter(active=True).order_by('-last_voted')[:num_questions]
    inactive_question_list  = Question.objects.annotate(votes=Sum('choice__votes')).filter(active=False).order_by('-last_voted')[:num_questions]
    context = {'latest_question_list': latest_question_list, 'inactive_question_list' : inactive_question_list}
    return render(request, 'polls/summary.html', context)



class DetailView(generic.DetailView):
    model = Question
    template_name = 'polls/detail.html'

class ResultsView(generic.DetailView):
    model = Question
    template_name = 'polls/results.html'


def vote(request, question_id):
    question = get_object_or_404(Question, pk=question_id)
    try:
        selected_choice = question.choice_set.get(pk=request.POST['choice'])
    except (KeyError, Choice.DoesNotExist):
        # REdirect the question voting form.
        return render(request, 'polls/detail.html', {
            'question': question,
            'error_message' : "You didn't select a choice.",
        })
    else:
        # selected_choice.votes += 1
        selected_choice.votes = F('votes') + 1  # Safer
        selected_choice.save()
        question.total_votes = F('total_votes') + 1
        question.save()
        return HttpResponseRedirect(reverse('polls:results', args=(question.id,)))

def ask(request):
    choice_fields = 5
    try:
        question = request.POST['question']
        choice = []
        for i in range(0,choice_fields):
            choice.append(request.POST['choice%d' % i])

    except (KeyError, Choice.DoesNotExist):
        # REdirect the question voting form.
        return render(request, 'polls/ask.html', {
            'error_message' : "You didn't select a choice.",
            'choice_fields' : range(0,choice_fields),
        })
    else:
        # FIXME - Replace with something like a custom create function call
        q = Question.objects.create(question_text=question)
        q.save()
        for i in range(0,choice_fields):
            # Check if a valid choice given
            if choice[i]:
                c = Choice.objects.create(question=q, choice_text=choice[i])

        return HttpResponseRedirect(reverse('polls:results', args=(q.id,)))
    

